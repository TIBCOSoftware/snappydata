/*
 * Copyright (c) 2017-2019 TIBCO Software Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

apply plugin: 'scala'
compileScala.options.encoding = 'UTF-8'

// fix scala+java mix to all use compileScala which uses correct dependency order
sourceSets.main.scala.srcDir 'src/main/java'
sourceSets.main.java.srcDirs = []
sourceSets.test.java.srcDirs = []
sourceSets.test.scala.srcDir 'src/test/scala'

if (!(new File(rootDir, 'cluster/build.gradle').exists())) {
  ext {
    scalaBinaryVersion = '2.11'
    scalatestVersion = '2.2.6'
    scalaVersion = scalaBinaryVersion + '.8'
    snappyVersion = '1.1.0'
  }

  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://app.camunda.com/nexus/content/repositories/public' }
  }

  dependencies {
    compile 'org.scala-lang:scala-library:' + scalaVersion
    testCompile "org.scalatest:scalatest_${scalaBinaryVersion}:${scalatestVersion}"
    compile "io.snappydata:snappydata-cluster_2.11:${snappyVersion}"
  }

  archivesBaseName = 'snappydata-examples_' + '2.11'

} else {
  dependencies {

  compile project(":snappy-cluster_${scalaBinaryVersion}")

  if (new File(rootDir, 'aqp/build.gradle').exists()) {
    testRuntime project(":snappy-aqp_${scalaBinaryVersion}")
  }

  testCompile "org.scalatest:scalatest_${scalaBinaryVersion}:${scalatestVersion}"
  testCompile "commons-io:commons-io:2.6"
  testCompile project(':snappy-store:gemfire-core')
  testRuntime "org.pegdown:pegdown:${pegdownVersion}"
}

task productExamples(dependsOn: 'jar') { doLast {
  copy {
    from 'src/main/python/*'
    into "${buildDir}" }

  def productDir = file("${rootProject.buildDir}/snappy")
  productDir.mkdirs()
  def exampleArchiveName = "quickstart.jar"
  copy {
    from "${project.buildDir}/libs"
    into "${productDir}/lib"
    include "${project.jar.archiveName}"
    rename { filename -> exampleArchiveName }
  }
} }

archivesBaseName = 'snappydata-examples_' + scalaBinaryVersion

scalaTest {
  dependsOn ':cleanScalaTest', ':product'
  doFirst {
    // cleanup files since scalatest plugin does not honour workingDir yet
    cleanIntermediateFiles(project.path)
  }
  doLast {
    // cleanup files since scalatest plugin does not honour workingDir yet
    cleanIntermediateFiles(project.path)
  }
}

check.dependsOn scalaTest
}

ENDTASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = restoreLeadConfigData
         clientNames = locator1;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/smartConnector/streaming_sinkSmartConnectorModeForUpdateAndDelete.conf;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = backUpLeadConfigData
            threadGroups = snappyThreads;

TASK       taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_restartLeadVMWithStreamingApp
           io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.streaming_sink.SnappyStreamingSinkApp
           io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "streamingSinkTopic persoon false"
           io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingSinkApp
           io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
           io.snappydata.hydra.cluster.SnappyPrms-sleepTimeSecsBeforeRestart = 60
           maxThreads = 1
           startInterval = 120
           threadGroups = snappyThreads
           maxTimesToRun = 1;

CLOSETASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSQLScriptsWithSleep
    io.snappydata.hydra.cluster.SnappyPrms-logFileName = sqlScriptResults_restart.log
    io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = streaming_sink_queries.sql
    threadGroups = snappyThreads;

io.snappydata.hydra.cluster.SnappyPrms-cycleVms = true;

util.StopStartPrms-stopModes = NICE_KILL;
util.StopStartPrms-numVMsToStop = 1;
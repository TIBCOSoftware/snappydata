INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/startClusters.inc;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_StartKafkaTopic
    io.snappydata.hydra.cluster.SnappyPrms-kafkaTopic="streamingSinkTopic1" "streamingSinkTopic2"
    runMode = always
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod = HydraTask_generateAndPublishMethod
    //io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = "io.snappydata.hydra.streaming_sink.StringMessageProducer"
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "500000,streamingSinkTopic1,0,0"
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod = HydraTask_generateAndPublishMethod
    //io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = "io.snappydata.hydra.streaming_sink.StringMessageProducer"
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "500000,streamingSinkTopic2,500001,0"
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
    io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.streaming_sink.SnappyStreamingSinkJob
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic1,tableName=persoon,streaming.batch_interval=100,isConflation=false"
    io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp1
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingJob
    io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.streaming_sink.SnappyStreamingSinkJob
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "kafkaTopic=streamingSinkTopic2,tableName=persoon,streaming.batch_interval=100,isConflation=false"
    io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp2
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = leadThread;

TASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod = HydraTask_generateAndPublishMethod
    io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = "io.snappydata.hydra.streaming_sink.StringMessageProducer"
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "500000,streamingSinkTopic1,100000,4"
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads
    maxTimesToRun=1;

TASK  taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod = HydraTask_generateAndPublishMethod
    io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = "io.snappydata.hydra.streaming_sink.StringMessageProducer"
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "300000,streamingSinkTopic2,800000,4"
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = leadThread
    maxTimesToRun=1;

TASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
    io.snappydata.hydra.cluster.SnappyPrms-logFileName = sqlScriptResults_0.log
    io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = streaming_sink_queries.sql
    threadGroups = snappyStoreThreads
    maxThreads = 1;

CLOSETASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_stopStreamingJob
    io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingApp
    threadGroups = snappyThreads;

CLOSETASK   taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod = HydraTask_verifyResults
  threadGroups = snappyThreads;

CLOSETASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
    io.snappydata.hydra.cluster.SnappyPrms-logFileName = internal_query_execution.log
    io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = query_internal_table.sql
    threadGroups = snappyThreads;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/stopClusters.inc;

/* end task must stop snappy members because they are not stopped by Hydra */
hydra.Prms-alwaysDoEndTasks = true;
hydra.Prms-totalTaskTimeSec = 900;
hydra.Prms-maxResultWaitSec = 1500;

hydra.VmPrms-extraVMArgs   += fcn "hydra.TestConfigFcns.duplicate
                                  (\"-Xms1512m -Xmx2g \", ${${A}Hosts}, true)"
                             ncf
                             ,
                             fcn "hydra.TestConfigFcns.duplicate
                                  (\"-Xms1512m -Xmx2g \", ${${B}Hosts}, true)"
                             ncf;

io.snappydata.hydra.cluster.SnappyPrms-locatorMemory = 1024m;
io.snappydata.hydra.cluster.SnappyPrms-serverMemory = 8g;
io.snappydata.hydra.cluster.SnappyPrms-leadMemory = 4g;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/streamingAgg/startClusterDualModeAgg.inc;

INITTASK  taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSQLScripts
    io.snappydata.hydra.cluster.SnappyPrms-logFileName = create_join_table.log
    io.snappydata.hydra.cluster.SnappyPrms-sqlScriptNames = createJoinTableForStreaming.sql
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyJob
    io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.streaming_sink.CreateTableForJoinJob
    io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "tableName=persoon,isRowTable=${isRowTable},withKeyColumn=${withKeyColumn},isPartitioned=${isPartitioned}"
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INITTASK     taskClass   = io.snappydata.hydra.adAnalytics.SnappyAdAnalyticsTest taskMethod  = HydraTask_executeSnappyStreamingApp
    io.snappydata.hydra.cluster.SnappyPrms-streamingJobClassNames = io.snappydata.hydra.streaming_sink.SnappyStreamingSinkAppWithAggregate
    io.snappydata.hydra.cluster.SnappyPrms-userAppArgs = "streamingSinkTopic persoon false ${outputMode} join"
    io.snappydata.hydra.cluster.SnappyPrms-userAppName = streamingSinkApp
    io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
    threadGroups = snappyThreads;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/streamingAgg/streamingAgg.inc;

INCLUDE $JTESTS/io/snappydata/hydra/streaming_sink/stopDualModeCluster.inc;

io.snappydata.hydra.testDMLOps.SnappySchemaPrms-aggType="join";